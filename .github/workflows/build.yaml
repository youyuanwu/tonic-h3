name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        BUILD_TYPE: ["Debug"] # "Release"
        os: [ windows-2025, ubuntu-latest ]
    steps:
    - uses: actions/checkout@v4

    - name: Install msquic from apt (linux)
      if: runner.os == 'Linux'
      run: |
        wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb;
        sudo dpkg -i packages-microsoft-prod.deb;
        sudo apt-get update;
        sudo apt-get install libmsquic;
        dpkg -L libmsquic;

    - name: Run Vcpkg (windows)
      if: runner.os == 'Windows'
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 7354f1c8a0a276072e8d73d7eb6df6ca0ce8ccb1

    - name: vcpkg install msquic (windows)
      if: runner.os == 'Windows'
      run: vcpkg install msquic

    - name: Use nasm from winget (for quiche boringssl)
      if: runner.os == 'Windows'
      run: winget install nasm --accept-package-agreements --accept-source-agreements --disable-interactivity

    - name: Install rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.89.0
        components: rustfmt, clippy

    - uses: taiki-e/install-action@protoc

    - uses: taiki-e/install-action@cargo-llvm-cov

    - name: Run cargo check
      run: cargo check

    - name: Run cargo fmt
      run: cargo fmt --all -- --check
    
    - name: Run cargo clippy
      run: cargo clippy --all-targets -- -D warnings

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: dotnet build
      run: dotnet build

    - name: cargo build all (needed for example tests)
      run: cargo build --all-targets

    - name: run all rust unittests
      run: cargo test --all

    - name: Run llvm-cov
      run: cargo llvm-cov --codecov --output-path codecov.json --ignore-filename-regex "tonic-h3-tests.*|external.*"

    - name: Show cov summary
      run: cargo llvm-cov report --summary-only --ignore-filename-regex "tonic-h3-tests.*|external.*"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./codecov.json
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}